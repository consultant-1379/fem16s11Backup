<?xml version="1.0" encoding="UTF-8"?><flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>BRANCH</string>
        <string>product_set_version</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>product_set_version</name>
          <description>Enter the product set version (e.g. 20.11.52).Please ensure to give latest product set version compared to last built product set.</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description>Enter the GIT Branch (e.g. master).</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@69.0.3">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@69.0.3">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57.2">
    <script>pipeline {
    agent { node { label 'Cloud-Native-Pointfix' } }
    options {
        timestamps()
    }
    parameters {
        string(name: 'product_set_version', description: 'Enter the product set version (e.g. 20.11.52).Please ensure to give latest product set version compared to last built product set.', defaultValue: "")
		string(name: 'BRANCH', description: 'Enter the GIT Branch (e.g. master).', defaultValue: "")
    }
    stages {
        stage('list') {
            steps {
                script {
                    environment_list = [[$class:'StringParameterValue', name:'BRANCH', value:String.valueOf("${BRANCH}")],
                                        [$class:'StringParameterValue', name:'product_set_version', value:String.valueOf("${product_set_version}")]]
                    echo "$environment_list"
                    branch_exists = sh(returnStatus: true, script: """git ls-remote --exit-code --heads $env.GERRIT_MIRROR/OSS/com.ericsson.oss.containerisation/enm-containerisation-ci-pipeline $BRANCH""")
                    if(branch_exists != 0) {
                        echo "Branch doesnot exists"
                         error("Branch does not exists")
                    }
                }
            }
        }
        stage('Trigger DSL') {
                    steps {
                        retry(3) {
                            script {
                                build(job: "testdsl_svu", propagate: true, wait: true, parameters: environment_list)
                                //env.ERIC_ENM_SLES_BASE_IMAGE_TAG = "\$eric_enm_sles_base_build.buildVariables.IMAGE_TAG"
                            }
                        }
                    }
           }
           stage('Trigger genertaedL') {
                    steps {
                            script {
                                build(job: "testingjob", propagate: true, wait: true, parameters: environment_list)
                                //env.ERIC_ENM_SLES_BASE_IMAGE_TAG = "\$eric_enm_sles_base_build.buildVariables.IMAGE_TAG"
                            }
                    }
           }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>