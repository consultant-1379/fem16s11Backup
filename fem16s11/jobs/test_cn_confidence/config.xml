<flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@69.0.3">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@69.0.3">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57.2">
    <script>

pipeline {
    agent { label 'Cloud-Native' }
    options {
        timestamps()
    }
    stages {
        stage ('Create cENM PS Version &amp; Set confidence level for Build Images') {
            when { expression { env.CONF_NAME == 'cENM-Build-Images' } }
            steps {
                script {
                    echo "Hi Build Images"
                    echo "${CONF_NAME}"
                    echo "${CONF_LEVEL}"
                    echo "${PRODUCT_SET}"
                    env.CONF_PROCESS = "Success"
                    //env.PRODUCT_SET = "1.1.1-202"
                    get_last_cn_build_version()
                }
            }
        }
        stage ('Set confidence level for Integration Charts') {
            when { expression { env.CONF_NAME == 'cENM-Build-Integration-Charts' } }
            steps {
                script {
                    echo "Hi Integration"
                }
            }
        }
        stage ('Set confidence level for CSAR') {
            when { expression { env.CONF_NAME == 'cENM-Build-CSAR' } }
            steps {
                script {
                    echo "Hi CSAR"
                }
            }
        }
        stage ('Set confidence level for RFA') {
            when { expression { env.CONF_NAME == 'cENM-RFA' } }
            steps {
                script {
                    echo "Hi RFA"
                }
            }
        }
        stage ('Set confidence level for Deploy II Charts') {
            when { expression { env.CONF_NAME == 'cENM-Deploy-II-Charts' } }
            steps {
                script {
                    echo "Hi Deploy"
                }
            }
        }
    }
}

def get_last_cn_build_version(){
	echo "Running get last cENM PS build version"
	
	env.CENM_PRODUCT_SET = sh(script: 'wget -q -O - --no-check-certificate http://atvts3460.athtem.eei.ericsson.se:8000/api/cloudNative/getLastBuildProductSetVersion/${PRODUCT_SET}/', returnStdout: true).trim().replaceAll('"', '')
	if (env.CENM_PRODUCT_SET == 'false') {
		sh(script: 'wget -q -O - --no-check-certificate --post-data="" http://atvts3460.athtem.eei.ericsson.se:8000/api/manageCNProductSet/${PRODUCT_SET}/cENM-Build-Images/in_progress/', returnStdout: true).trim()
	} else {
	    if (env.CENM_PRODUCT_SET.contains("-")){
	        def product_set = env.CENM_PRODUCT_SET.split('-')
	        env.PRODUCT_SET = product_set[0] + "-" + (Integer.parseInt(product_set[1])+1)
	        sh(script: 'wget -q -O - --no-check-certificate --post-data="" http://atvts3460.athtem.eei.ericsson.se:8000/api/manageCNProductSet/${PRODUCT_SET}/cENM-Build-Images/in_progress/', returnStdout: true).trim()
	    } else {
	        env.PRODUCT_SET = env.PRODUCT_SET + "-" + 1
	        sh(script: 'wget -q -O - --no-check-certificate --post-data="" http://atvts3460.athtem.eei.ericsson.se:8000/api/manageCNProductSet/${PRODUCT_SET}/cENM-Build-Images/in_progress/', returnStdout: true).trim()
	    }
	}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>true</disabled>
</flow-definition>