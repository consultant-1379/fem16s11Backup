<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
  </actions>
  <description>ENM Cloud Native Build pipeline eric-enm-e2e-hlc-build - autogenerated using JobDSL - all manual changes will be overwritten!</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>CHART_VERSION</name>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>true</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>ALL</scanQueueFor>
      <blockingJobs>eric-enm-e2e-build</blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57.2">
    <script>SG_PROJECT_LIST = [&quot;eric-enm-common-helmchart-library_update-HLC-version&quot;, &quot;eric-enm-omnidaemon_update-HLC-version&quot;, &quot;eric-enm-troubleshooting-utils_update-HLC-version&quot;, &quot;eric-enmsg-access-control_update-HLC-version&quot;, &quot;eric-enmsg-amos_update-HLC-version&quot;, &quot;eric-enmsg-autoid-service_update-HLC-version&quot;, &quot;eric-enmsg-auto-id-solr_update-HLC-version&quot;, &quot;eric-enmsg-autoprovisioning_update-HLC-version&quot;, &quot;eric-enmsg-cellserv_update-HLC-version&quot;, &quot;eric-enmsg-cmevents_update-HLC-version&quot;, &quot;eric-enmsg-cmservice_update-HLC-version&quot;, &quot;eric-enmsg-cmutilities_update-HLC-version&quot;, &quot;eric-enmsg-com-ecim-mscm_update-HLC-version&quot;, &quot;eric-enmsg-comecimpolicy_update-HLC-version&quot;, &quot;eric-enmsg-dc-history_update-HLC-version&quot;, &quot;eric-enmsg-dlms_update-HLC-version&quot;, &quot;eric-enmsg-domain-proxy-coordinator_update-HLC-version&quot;, &quot;eric-enmsg-dpmediation_update-HLC-version&quot;, &quot;eric-enmsg-elex_update-HLC-version&quot;, &quot;eric-enmsg-eventbasedclient_update-HLC-version&quot;, &quot;eric-enmsg-flowautomation_update-HLC-version&quot;, &quot;eric-enmsg-fls_update-HLC-version&quot;, &quot;eric-enmsg-fm-alarm-processing_update-HLC-version&quot;, &quot;eric-enmsg-fm-history_update-HLC-version&quot;, &quot;eric-enmsg-fm-service_update-HLC-version&quot;, &quot;eric-enmsg-general-scripting_update-HLC-version&quot;, &quot;eric-enmsg-gossiprouter-cache_update-HLC-version&quot;, &quot;eric-enmsg-gossiprouter-remoting_update-HLC-version&quot;, &quot;eric-enmsg-identity-mgmt-service_update-HLC-version&quot;, &quot;eric-enmsg-import-export-service_update-HLC-version&quot;, &quot;eric-enmsg-ip-service-management_update-HLC-version&quot;, &quot;eric-enmsg-itservices_update-HLC-version&quot;, &quot;eric-enmsg-jmsserver_update-HLC-version&quot;, &quot;eric-enmsg-kpi-calc-serv_update-HLC-version&quot;, &quot;eric-enmsg-kpi-service_update-HLC-version&quot;, &quot;eric-enmsg-lcmservice_update-HLC-version&quot;, &quot;eric-enmsg-medrouter_update-HLC-version&quot;, &quot;eric-enmsg-msap_update-HLC-version&quot;, &quot;eric-enmsg-msapgfm_update-HLC-version&quot;, &quot;eric-enmsg-mscm_update-HLC-version&quot;, &quot;eric-enmsg-mscmapg_update-HLC-version&quot;, &quot;eric-enmsg-mscmip_update-HLC-version&quot;, &quot;eric-enmsg-msfm_update-HLC-version&quot;, &quot;eric-enmsg-mskpirt_update-HLC-version&quot;, &quot;eric-enmsg-msnetlog_update-HLC-version&quot;, &quot;eric-enmsg-mspm_update-HLC-version&quot;, &quot;eric-enmsg-mspmip_update-HLC-version&quot;, &quot;eric-enmsg-mssnmpcm_update-HLC-version&quot;, &quot;eric-enmsg-mssnmpfm_update-HLC-version&quot;, &quot;eric-enmsg-nb-fm-snmp_update-HLC-version&quot;, &quot;eric-enmsg-nbi-bnsi-fm_update-HLC-version&quot;, &quot;eric-enmsg-nedo-serv_update-HLC-version&quot;, &quot;eric-enmsg-networkexplorer_update-HLC-version&quot;, &quot;eric-enmsg-nodecli_update-HLC-version&quot;, &quot;eric-enmsg-node-plugins_update-HLC-version&quot;, &quot;eric-enmsg-openidm_update-HLC-version&quot;, &quot;eric-enmsg-pki-ra-service_update-HLC-version&quot;, &quot;eric-enmsg-pmic-router-policy_update-HLC-version&quot;, &quot;eric-enmsg-pmservice_update-HLC-version&quot;, &quot;eric-enmsg-sa-service_update-HLC-version&quot;, &quot;eric-enmsg-security-service_update-HLC-version&quot;, &quot;eric-enmsg-sentinel_update-HLC-version&quot;, &quot;eric-enmsg-shm-core-service_update-HLC-version&quot;, &quot;eric-enmsg-shmservice_update-HLC-version&quot;, &quot;eric-enmsg-smrs-service_update-HLC-version&quot;, &quot;eric-enmsg-sso_update-HLC-version&quot;, &quot;eric-enmsg-sps-service_update-HLC-version&quot;, &quot;eric-enmsg-supervisionclient_update-HLC-version&quot;, &quot;eric-enmsg-uiservice_update-HLC-version&quot;, &quot;eric-enmsg-vault-service_update-HLC-version&quot;, &quot;eric-enmsg-visinaming-nb_update-HLC-version&quot;, &quot;eric-enmsg-visinaming-sb_update-HLC-version&quot;, &quot;eric-enmsg-web-push-service_update-HLC-version&quot;, &quot;eric-enmsg-nb-alarm-irp-agent-corba_update-HLC-version&quot;, &quot;eric-enm-fm-alert-parser_update-HLC-version&quot;, &quot;eric-enm-sso-core-token-service_update-HLC-version&quot;]
pipeline {
    agent { node { label &apos;Cloud-Native&apos; } }
    environment {
        PIPELINE_LAST_STAGE_STATUS = &apos;UNKNOWN&apos;
    }
    stages {
        stage(&apos;Updating HLC version in SG&apos;) {
            steps{
                script{
                    sh &quot;touch hlc_failed_service_group_builds_pointfix&quot;
                    for (def service_group_build in SG_PROJECT_LIST) {
                        def service_group_build_pointfix = service_group_build + &quot;-pointfix&quot;
                        try{
                            stage(&quot;Build ${service_group_build_pointfix}&quot;){
                                retry(3) {
                                    def build = build(job: &quot;${service_group_build_pointfix}&quot;, propagate: false, wait: true, parameters: [string(name:&quot;CHART_VERSION&quot;, value:String.valueOf(&quot;${CHART_VERSION}&quot;)), string(name:&quot;BRANCH&quot;, value:String.valueOf(&quot;${BRANCH}&quot;))])
                                    def BuildResult = build.getResult()
                                    if (BuildResult != &quot;SUCCESS&quot;) {
                                        error &apos;FAIL&apos;
                                    }
                                }
                            }
                        }catch (e) {
                            sh &quot;echo ${service_group_build_pointfix} &gt;&gt; hlc_failed_service_group_builds_pointfix&quot;
                            currentBuild.result = &apos;FAILURE&apos;
                        }
                    }
                }
            }
        }
        stage(&apos;Generate Failed HLC Job File&apos;) {
            steps {
                script {
                    archiveArtifacts &apos;hlc_failed_service_group_builds_pointfix&apos;
                    sh &quot;rm -rf hlc_failed_service_group_builds_pointfix&quot;
                }
            }
        }
    }
    post {
        failure {
            script {
                if (PIPELINE_LAST_STAGE_STATUS==&apos;SUCCESS&apos;) {
                    currentBuild.rawBuild.@result = hudson.model.Result.SUCCESS
                }
            }
        }
    }
}

</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>