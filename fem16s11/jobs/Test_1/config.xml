<flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>var2</string>
        <string>var1</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>var1</name>
          <description>sample_1</description>
          <defaultValue>input</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>var2</name>
          <description>sample_2</description>
          <defaultValue>input</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@65.0.1">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@65.0.1">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <EnvInjectJobProperty plugin="envinject@2.1.5">
      <info>
        <secureGroovyScript plugin="script-security@1.61">
          <script/>
          <sandbox>true</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57.2">
    <script>def get_value(var_name,var_value){
    def value = 'error_occured'
	def default_value = 'input'
    try {
        sh "curl -u cenmbuild:2dc0ea58edb3bcfe90cd1abef820a698 https://fem16s11-eiffel004.lmera.ericsson.se:8443/jenkins/job/${env.JOB_NAME}/lastBuild/artifact/generatedFile.txt &gt; last-values"
		sh "grep ${var_name}= last-values | sed 's/${var_name}=//' &gt; VALUE.txt"
		sh "cat VALUE.txt"
		script{
			value = readFile('VALUE.txt')
		}
        echo "previous value of ${var_name} is ${value}"
		echo "current value of ${var_name} is ${var_value}"
    } catch( err ){
        echo "$err"
    }
	if(var_value== default_value){
		return var_value
	}
	else{
		return value
	}
}


pipeline{
    agent { label 'Cloud-Native' }
	environment {
        HOME_DIR = "${WORKSPACE}"
    }
	parameters {
        string(defaultValue: "input", description: 'sample_1',  name: 'var1')
        string(defaultValue: "input", description: 'sample_2',  name: 'var2')
    }
    
    stages{
        stage( 'test-Build' ) {
            steps {
			   echo "current var1 value ${var1}"
			   echo "current var2 value ${var2}"
               sh 'echo "var1=${var1}\nvar2=${var2}" &gt; generatedFile.txt'
	        }
        }
		stage('print-previous-values'){
            steps{
			    script{
				    var1 = get_value("var1",var1)
					var2 = get_value("var2",var2)
				}
				echo "----------------------------------------------------------------"
				echo "in stage 2 var1 is ${var1}"
				echo "in stage 2 var2 is ${var2}"
            }
		}
    }
    post{
        failure {
            script{
                echo "Failure"
            }
        }
        aborted{
            script{
                echo "Aborted"
            }
        }
        success{
            script{
                echo "Success"
            }
        }
        always {
            archiveArtifacts artifacts: 'generatedFile.txt', onlyIfSuccessful: false
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>true</disabled>
</flow-definition>