<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.3"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.3">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>ENM Cloud Native SVU pipeline eric-cenm-sprint-version-update - autogenerated using JobDSL - all manual changes will be overwritten!This is a Sprint Version Update job for cENM repos to be run at the end of every sprints.This job creates a branch from the given branch/tag (master by default) in the name of the current sprint number (eg print_20.11) and increments the patch version contained in the VERSION_PREFIX. Further, this job also incements the minor version in the master.&lt;h2&gt;Documentation&lt;/h2&gt;&lt;ul&gt;  &lt;li&gt;&lt;a style=&quot;font-size: 16px&quot; href=&quot;https://confluence-oss.seli.wh.rnd.internal.ericsson.com/display/CI/User+Guide%3A+Sprint+Version+Update+Job&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;User Guide&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;&lt;a style=&quot;font-size: 16px&quot; href=&quot;https://confluence-oss.seli.wh.rnd.internal.ericsson.com/pages/viewpage.action?pageId=374880120&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Admin Guide&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE</name>
          <defaultValue>Docker-POC-e2e</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REPO</name>
          <description>Enter the repo. Eg. OSS/com.ericsson.oss.de.containerisation/test-eric-enmsg-kpi-service</description>
          <defaultValue>OSS/com.ericsson.oss.de.containerisation/test-eric-enmsg-kpi-service</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CURRENT_SPRINT</name>
          <description>Enter current sprint number Eg: 21.04</description>
          <defaultValue>21.04</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CHECKOUT_TAG</name>
          <description>This is the reference tag based on which pointfix branch would be created. Use refs/tags/[Current Sprint Number] to pick up the latest release. Eg:  refs/tags/21.04.</description>
          <defaultValue>refs/tags/21.04</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EMAIL</name>
          <defaultValue>paras.setia@ericsson.com</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>PUSH_COMMIT</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@2.2.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2660.vb_c0412dc4e6d">
    <script>def cENMImageRepos = [&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-access-control&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-amos&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-autoid-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-autoprovisioning&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-cmevents&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-cmservice&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-cmutilities&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-com-ecim-mscm&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-comecimpolicy&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-dc-history&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-domain-proxy-coordinator&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-dlms&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-eventbasedclient&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-flowautomation&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-fls&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-flsdb-schemamgt&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-fm-alarm-processing&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-fm-history&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-fm-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-general-scripting&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-gossiprouter-cache&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-gossiprouter-remoting&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-gossiprouter-eap7&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-import-export-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-ip-service-management&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-jmsserver&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-kpi-calc-serv&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-kpi-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-kvstore-hc&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-lcmservice&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-medrouter&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-msap&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-msapgfm&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-mscm&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-mscmapg&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-mscmip&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-msfm&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-mskpirt&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-msnetlog&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-mspm&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-mspmip&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-mssnmpcm&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-mssnmpfm&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-nb-alarm-irp-agent-corba&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-nb-fm-snmp&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-nbi-bnsi-fm&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-nedo-serv&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-networkexplorer&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-node-plugins&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-nodecli&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-omnidaemon&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-opendj&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-openidm&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-pki-ra-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-pmic-router-policy&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-pmservice&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-sa-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-sentinel&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-sfwkdb-schemamgt&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-shm-core-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-shmservice&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-sps-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-supervisionclient&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-troubleshooting-utils&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-uiservice&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-visinaming-nb&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-visinaming-sb&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-vault-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-web-push-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-elex&apos;,&apos;OSS/com.ericsson.oss.itpf.modeling/eric-enm-modeldeployservice&apos;,&apos;OSS/com.ericsson.oss.cloudcommon.models/eric-enm-models&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-dps-schemamgt&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-identity-mgmt-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-sso&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-security-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-cellserv&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-sso-core-token-service&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-credm-controller&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-itservices&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-sps-web-service&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-ebs-flow&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-ebs-topology&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-ebs-controller&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enmsg-element-manager&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.presentation.server.logging/elasticsearch-admin&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enm-data-migration&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-remotedesktop&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enm-ddc&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enm-models-ebs&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-fmx-actionserver&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-fmx-admin-ws&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-fmx-inference-engine&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-fmx-moduleserver&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-fileaccountservice&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-filetransferservice&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enm-ephemeral-container&apos;,&apos;/OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-pm-fileaccess-nbi&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.mediation.sdk/eric-enm-fmsdk&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.mediation.sdk/sdk-csar-buildmanager&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.mediation.sdk/fm-sdk-templates&apos;]
def cENMCSARRepos = [&apos;OSS/com.ericsson.oss.containerisation/eric-enm-csar-package&apos;]
def cENMIntegrationReposInCA = [&apos;OSS/com.ericsson.oss.containerisation/eric-enm-infra-integration&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-stateless-integration&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-monitoring-integration&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-pre-deploy-integration&apos;,&apos;OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.containerisation/eric-enmsg-fmx-integration&apos;]
def cENMIntegrationRepos = [&apos;OSS/com.ericsson.oss.containerisation/eric-enm-integration&apos;]
def cENMOSBaseImageRepos = [&apos;OSS/com.ericsson.oss.containerisation/eric-enm-sles-base&apos;]
def cENMBaseImageRepos = [&apos;OSS/com.ericsson.oss.containerisation/eric-enm-init-wait&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-neo4j-extension-plugin&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-securestorage-init-base&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-sles-eap7&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-monitoring-eap7&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-sles-base-scripting&apos;,&apos;OSS/com.ericsson.oss.itpf.security/eric-sec-directoryservices-fd&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-monitoring-jre&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-sles-apache2&apos;]
def cENMSyncRepos = [&apos;OSS/com.ericsson.oss.containerisation/eric-enm-integration-pipeline-code&apos;,&apos;OSS/com.ericsson.oss.containerisation/enm-containerisation-ci-pipeline&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-fm-alert-parser&apos;]
def cENMHelmRepo = [&apos;OSS/com.ericsson.oss.containerisation/eric-enm-common-helmchart-library&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-bro-integration&apos;,&apos;OSS/com.ericsson.oss.containerisation/enm-containerisation-artifacts&apos;,&apos;OSS/com.ericsson.oss.containerisation/eric-enm-cenm-orchestrator&apos;]
parameters {
    string(name: &apos;SLAVE&apos;, defaultValue: &quot;Docker-POC-e2e&quot;)
    string(name: &apos;CURRENT_SPRINT&apos;, description: &apos;Enter current sprint number Eg: 21.01&apos;,defaultValue: &quot;21.01&quot;)
    string(name: &apos;CHECKOUT_TAG&apos;, description: &apos;This is the reference tag based on which pointfix branch would be created. Use refs/tags/SPRINT_[Current Sprint Number] to pick up the latest release. Eg:  refs/tags/SPRINT_20.14.&apos;, defaultValue: &quot;*/master&quot;)
    string(name: &apos;EMAIL&apos;, defaultValue: &quot;&quot;)
    booleanParam(name: &apos;PUSH_COMMIT&apos;, defaultValue: false)
}
pipeline {
    agent { label SLAVE }
    stages {
        stage(&apos;Init&apos;) {
            steps {
                script {
                    sh &apos;&apos;&apos;
                        #Remove running containers
                        running=$(docker ps -a -q| wc -l)
                        if [ &quot;$running&quot; -gt &quot;0&quot; ];then
                            echo &quot;Killing containers&quot;
                            docker rm -f $(docker ps -a -q)
                        fi
                    &apos;&apos;&apos;
                    createCsv()
                }
            }
        }
        stage(&apos;Update Image Versions&apos;) {
         steps {
                script {
                    callCreatePointFixBranchfunction(&apos;eric-cenm-create-pointfix-branch&apos;, cENMImageRepos, &apos;Image&apos;)
                }
            }
        }

        stage(&apos;Update CSAR Versions&apos;) {
         steps {
                script {
                    callCreatePointFixBranchfunction(&apos;eric-cenm-create-pointfix-branch&apos;, cENMCSARRepos, &apos;CSAR&apos;)
                }
            }
        }

        stage(&apos;Update Integration Charts Versions - InCA&apos;) {
         steps {
                script {
                    callCreatePointFixBranchfunction(&apos;eric-cenm-create-pointfix-branch-InCA&apos;, cENMIntegrationReposInCA, &apos;Integration-InCA&apos;)
                }
            }
        }

        stage(&apos;Update Integration Charts Versions&apos;) {
         steps {
                script {
                    callCreatePointFixBranchfunction(&apos;eric-cenm-create-pointfix-branch&apos;, cENMIntegrationRepos, &apos;Integration&apos;)
                }
            }
        }

        stage(&apos;Update OS Base Images Versions&apos;) {
         steps {
                script {
                    callCreatePointFixBranchfunction(&apos;eric-cenm-create-pointfix-branch&apos;, cENMOSBaseImageRepos, &apos;Integration&apos;)
                }
            }
        }

        stage(&apos;Update Base Images Versions&apos;) {
         steps {
                script {
                    callCreatePointFixBranchfunction(&apos;eric-cenm-create-pointfix-branch&apos;, cENMBaseImageRepos, &apos;Integration&apos;)
                }
            }
        }

        stage(&apos;Update Sync Repos&apos;) {
         steps {
                script {
                    createPointFixBranchNoTag(cENMSyncRepos, &apos;Sync&apos;)
                }
            }
        }
        stage(&apos;Update Helm Repo&apos;) {
         steps {
                script {
                    createPointFixBranchHelmRepo(cENMHelmRepo, &apos;Sync&apos;)
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: &apos;report.csv&apos;, allowEmptyArchive: true
            emailext attachmentsPattern: &apos;report.csv&apos;, body: &apos;cENM Sprint Version Update Completed, See attached file for detailed results.&apos;, subject: &apos;cENM Sprint Version Update Completed&apos;, to: EMAIL
            sh &apos;&apos;&apos;
                #clean workspace
                echo Workspace ${WORKSPACE}
                rm -rf ${WORKSPACE}/*
            &apos;&apos;&apos;
        }
        //unstable {
        //     emailext attachmentsPattern: &apos;report.csv&apos;, body: &quot;cENM Sprint Version Update Failed Pipeline: ${currentBuild.fullDisplayName}&quot;, subject: &apos;cENM Sprint Version Update Failed.&apos;, to: EMAIL
        //     archiveArtifacts artifacts: &apos;report.csv&apos;, allowEmptyArchive: true
        //     sh &apos;&apos;&apos;
        //         #clean workspace
        //         echo Workspace ${WORKSPACE}
        //         sudo rm -rf ${WORKSPACE}/*
        //     &apos;&apos;&apos;
        // }
        // unsuccessful {
        //     emailext attachmentsPattern: &apos;report.csv&apos;, body: &quot;cENM Sprint Version Update Failed Pipeline: ${currentBuild.fullDisplayName}&quot;, subject: &apos;cENM Sprint Version Update Failed.&apos;, to: EMAIL
        //     archiveArtifacts artifacts: &apos;report.csv&apos;, allowEmptyArchive: true
        //     sh &apos;&apos;&apos;
        //         #clean workspace
        //         echo Workspace ${WORKSPACE}
        //         sudo rm -rf ${WORKSPACE}/*
        //     &apos;&apos;&apos;
        // }
    }
}

def createCsv() {
    outString = &apos;Repository,Repo Type,Old Version,New Version,Pointfix Branch Version,Updated,Status\r\n&apos;
    writeFile file: &apos;report.csv&apos;, text: outString
}

def callCreatePointFixBranchfunction(pointfixjob, repos, repoType) {
    jobStatusSuccess = true
    status = &quot;ERROR&quot;
    updated = &quot;FALSE&quot;
    oldVersion = &quot;&quot;
    newVersion = &quot;&quot;
    repos.each { item -&gt;
        def b = build(job: &quot;${pointfixjob}&quot;, parameters: [[$class:&apos;StringParameterValue&apos;, name:&apos;REPO&apos;, value:String.valueOf(&quot;${item}&quot;)],[$class:&apos;StringParameterValue&apos;, name:&apos;CURRENT_SPRINT&apos;, value:String.valueOf(&quot;${params.CURRENT_SPRINT}&quot;)],[$class:&apos;StringParameterValue&apos;, name:&apos;CHECKOUT_TAG&apos;, value:String.valueOf(&quot;${params.CHECKOUT_TAG}&quot;)],[$class:&apos;StringParameterValue&apos;, name:&apos;EMAIL&apos;, value:String.valueOf(&quot;${params.EMAIL}&quot;)],[$class:&apos;BooleanParameterValue&apos;, name:&apos;PUSH_COMMIT&apos;, value: &quot;${params.PUSH_COMMIT}&quot;]], propagate: false, wait: true)

        currentBuild.description = &quot;Sprint Version Update Branch: $b.buildVariables.BRANCH_NAME&lt;BR&gt;&quot;
        currentBuild.description += &quot;Branch based on tag/branch: CHECKOUT_TAG&quot;
        echo &quot;Repo = ${item}, Result = $b.result&quot;

        if(&quot;$b.result&quot; == &apos;SUCCESS&apos;) {
            status = &quot;OK&quot;
            jobStatusSuccess = jobStatusSuccess &amp;&amp; true
        } else {
            status = &quot;ERROR&quot;
            jobStatusSuccess = jobStatusSuccess &amp;&amp; false
        }

        readContent = readFile &apos;report.csv&apos;
        outString = readContent + &quot;${item},$repoType,$b.buildVariables.oldMinorVersion,$b.buildVariables.newMinorVersion,$b.buildVariables.newVersion,$b.buildVariables.updated,$status\r\n&quot;
        writeFile file: &apos;report.csv&apos;, text: outString
        if(!jobStatusSuccess) {
            currentBuild.result = &quot;UNSTABLE&quot;
            //unstable(&quot;Stage unstable&quot;)
            //     error(&quot;Error while updating the versions for the repo type: $repoType&quot;)
        }
    }
}

def createPointFixBranchNoTag(repos, repoType) {
    jobStatusSuccess = true
    status = &quot;ERROR&quot;
    updated = &quot;FALSE&quot;
    repos.each { item -&gt;
        def b = build(job: &apos;eric-cenm-create-pointfix-branch-no-tag&apos;, parameters: [[$class:&apos;StringParameterValue&apos;, name:&apos;REPO&apos;, value:String.valueOf(&quot;${item}&quot;)],[$class:&apos;StringParameterValue&apos;, name:&apos;CURRENT_SPRINT&apos;, value:String.valueOf(&quot;${params.CURRENT_SPRINT}&quot;)],[$class:&apos;BooleanParameterValue&apos;, name:&apos;PUSH_COMMIT&apos;, value: &quot;${params.PUSH_COMMIT}&quot;],[$class:&apos;StringParameterValue&apos;, name:&apos;EMAIL&apos;, value:String.valueOf(&quot;${params.EMAIL}&quot;)]], propagate: false, wait: true)
        currentBuild.description = &quot;Sprint Version Update Branch: $b.buildVariables.BRANCH_NAME&lt;BR&gt;&quot;
        currentBuild.description += &quot;Branch based on tag/branch: CHECKOUT_TAG&quot;
        echo &quot;Repo = ${item}, Result = $b.result&quot;
        if(&quot;$b.result&quot; == &apos;SUCCESS&apos;) {
            status = &quot;OK&quot;
            jobStatusSuccess = jobStatusSuccess &amp;&amp; true
        } else {
            status = &quot;ERROR&quot;
            jobStatusSuccess = jobStatusSuccess &amp;&amp; false
        }

        readContent = readFile &apos;report.csv&apos;
        outString = readContent + &quot;${item},$repoType,&apos;NA&apos;,&apos;NA&apos;,&apos;NA&apos;,$b.buildVariables.updated,$status\r\n&quot;
        writeFile file: &apos;report.csv&apos;, text: outString
         if(!jobStatusSuccess) {
            currentBuild.result = &quot;UNSTABLE&quot;

        }
    }
}

def createPointFixBranchHelmRepo(repos, repoType) {
    jobStatusSuccess = true
    status = &quot;ERROR&quot;
    updated = &quot;FALSE&quot;
    repos.each { item -&gt;
        def b = build(job: &apos;eric-cenm-create-pointfix-branch-helm-repo&apos;, parameters: [[$class:&apos;StringParameterValue&apos;, name:&apos;REPO&apos;, value:String.valueOf(&quot;${item}&quot;)],[$class:&apos;StringParameterValue&apos;, name:&apos;CURRENT_SPRINT&apos;, value:String.valueOf(&quot;${params.CURRENT_SPRINT}&quot;)],[$class:&apos;BooleanParameterValue&apos;, name:&apos;PUSH_COMMIT&apos;, value: &quot;${params.PUSH_COMMIT}&quot;],[$class:&apos;StringParameterValue&apos;, name:&apos;EMAIL&apos;, value:String.valueOf(&quot;${params.EMAIL}&quot;)]], propagate: false, wait: true)
        currentBuild.description = &quot;Sprint Version Update Branch: $b.buildVariables.BRANCH_NAME&lt;BR&gt;&quot;
        currentBuild.description += &quot;Branch based on tag/branch: CHECKOUT_TAG&quot;
        echo &quot;Repo = ${item}, Result = $b.result&quot;
        if(&quot;$b.result&quot; == &apos;SUCCESS&apos;) {
            status = &quot;OK&quot;
            jobStatusSuccess = jobStatusSuccess &amp;&amp; true
        } else {
            status = &quot;ERROR&quot;
            jobStatusSuccess = jobStatusSuccess &amp;&amp; false
        }

        readContent = readFile &apos;report.csv&apos;
        outString = readContent + &quot;${item},$repoType,&apos;NA&apos;,&apos;NA&apos;,&apos;NA&apos;,$b.buildVariables.updated,$status\r\n&quot;
        writeFile file: &apos;report.csv&apos;, text: outString
         if(!jobStatusSuccess) {
            currentBuild.result = &quot;UNSTABLE&quot;

        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>