<?xml version="1.0" encoding="UTF-8"?><flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@69.0.3">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@69.0.3">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57.2">
    <script>#!/usr/bin/env groovy



pipeline {
    agent {
        label 'Cloud-Native'
    }

    stages {
        stage('Inject Credential Files') {
            steps {
                withCredentials([file(credentialsId: 'lciadm100-docker-auth', variable: 'dockerConfig')]) {
                    sh "install -m 600 ${dockerConfig} ${HOME}/.docker/config.json"
                    sh "cat ${HOME}/.docker/config.json"
                }
            }
        }
        stage('Push to Release area') {
            steps{
                 script {
                     sh "docker pull kiwigrid/k8s-sidecar:0.1.2"
sh "docker pull squareup/ghostunnel:v1.4.1"
sh "docker pull dduportal/bats:0.4.0"
sh "docker pull grafana/grafana:6.5.2"
sh "docker pull jettech/kube-webhook-certgen:v1.0.0"

sh "docker tag kiwigrid/k8s-sidecar:0.1.2 armdocker.rnd.ericsson.se/proj-enm/k8s-sidecar:0.1.2"
sh "docker tag squareup/ghostunnel:v1.4.1 armdocker.rnd.ericsson.se/proj-enm/ghostunnel:v1.4.1"
sh "docker tag dduportal/bats:0.4.0 armdocker.rnd.ericsson.se/proj-enm/bats:0.4.0"
sh "docker tag grafana/grafana:6.5.2 armdocker.rnd.ericsson.se/proj-enm/grafana:6.5.2"
sh "docker tag jettech/kube-webhook-certgen:v1.0.0 armdocker.rnd.ericsson.se/proj-enm/kube-webhook-certgen:v1.0.0"

sh "docker push armdocker.rnd.ericsson.se/proj-enm/k8s-sidecar:0.1.2"
sh "docker push armdocker.rnd.ericsson.se/proj-enm/ghostunnel:v1.4.1"
sh "docker push armdocker.rnd.ericsson.se/proj-enm/bats:0.4.0"
sh "docker push armdocker.rnd.ericsson.se/proj-enm/grafana:6.5.2"
sh "docker push armdocker.rnd.ericsson.se/proj-enm/kube-webhook-certgen:v1.0.0"
					 
					 
                }
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>