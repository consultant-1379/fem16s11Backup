<?xml version="1.0" encoding="UTF-8"?><flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>product_set_version</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>ENM Cloud Native Build pipeline eric-enm-e2e-build - autogenerated using JobDSL - all manual changes will be overwritten!</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>product_set_version</name>
          <description>Enter the product set version (e.g. 20.11.52).                      Please ensure to give latest product set version compared to last built product set.</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@69.0.3">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@69.0.3">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <EnvInjectJobProperty plugin="envinject@2.1.5">
      <info>
        <propertiesContent>REPO=test-disbale</propertiesContent>
        <secureGroovyScript plugin="script-security@1.75">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57.2">
    <script>
pipeline {
    agent { node { label 'Cloud-Native' } }
    options {
        timestamps()
    }
    parameters {
        string(name: 'product_set_version', description: 'Enter the product set version (e.g. 20.11.52).                      Please ensure to give latest product set version compared to last built product set.', defaultValue: "")
    }
    stages {
      stage('test') {
         steps {
            script {
                if(env.REPO == 'test-enable')
                   echo "do something"
                else
                   return "not required"
            }
         }
      }
      stage ('Initialization of ENM Versions') {
            steps {
                script {
                    def productSet = ""

                    // For nightly build this parameter would be empty
                    if (params.product_set_version) {
                        productSet = params.product_set_version.trim()
                    }
                    // Check if product set version is given
                    if (productSet != "") {
                        env.PRODUCT_SET = productSet
                        echo "Triggered manually with the PRODUCT_SET: ${productSet}"
                        currentBuild.description = "Triggered Mode: &lt;b&gt;Manual&lt;/b&gt;&lt;br/&gt;"
                    } else {
                        echo "Triggered automatically."
                        currentBuild.description = "Triggered Mode: &lt;b&gt;Auto&lt;/b&gt;&lt;br/&gt;"
                    }
                }
             }
        } 
     }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>