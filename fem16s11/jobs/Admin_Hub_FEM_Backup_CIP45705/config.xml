<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.7"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.8">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@75.0.1">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@2.2.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty plugin="eiffel-core@75.0.1">
      <sequentialLinkingEnabled>false</sequentialLinkingEnabled>
    </com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty plugin="eiffel-core@75.0.1">
      <messagingEnabled>false</messagingEnabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@75.0.1">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.33">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>FEM</name>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>fem16s11</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.ericsson.duraci.messaging.UserDomainSuffixJobProperty plugin="eiffel-core@75.0.1">
      <enabled>false</enabled>
      <userDomainSuffix/>
    </com.ericsson.duraci.messaging.UserDomainSuffixJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(System)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># EVALBAD: CHECK WHICH IS REPO TO BE USED AND WHICH FOLDER CONFIG
# git clone ssh://gerrit.ericsson.se:29418/OSS/com.ericsson.ci.execution/Backup &amp;&amp; scp -p -P 29418 gerrit.ericsson.se:hooks/commit-msg Backup/.git/hooks/

if [ -d "Backup/$FEM" ]
then
	mkdir -p $FEM/jobs
    #echo "Copying the Jenkins configurations"    
	#cp -r /proj/eiffel004_config_$FEM/eiffel_home/*.xml ${WORKSPACE}/$FEM/
    
    #Plugins list copy
    #cp -r /proj/eiffel004_config/$FEM/eiffel_home/plugins ${WORKSPACE}/workspace/Test_backup_legacy/$FEM/
    #echo "Fetching the Installed plugin list"
    #mkdir -p $FEM/plugins
    #cd ${WORKSPACE}/$FEM/plugins
    #java -jar /proj/ciexadm200/tools/jcli/jenkins-cli.jar -noCertificateCheck -s https://$FEM-eiffel004.lmera.ericsson.se:8443/jenkins/ -user enmadm100 -ssh groovy = &lt;  ${WORKSPACE}/Backup/plugins.groovy &gt; plugins_$FEM.txt
    #cp -fr plugins_$FEM.txt ${WORKSPACE}/$FEM/
    
    # Job config.xml files copy
    echo "Copying the Jobs configurations"
    cd /proj/eiffel004_config_$FEM/eiffel_home/jobs
    pwd
    #cp -r /proj/eiffel004_config_$FEM/eiffel_home/jobs $WORKSPACE/$FEM/
    find . -type f -name 'config.xml' | cpio -p -d -v ${WORKSPACE}/$FEM/jobs
    

    cd ${WORKSPACE}
    tar -czvf legacy_fem_backup-$FEM.tar.gz $FEM  #archiving the config files
    cd ${WORKSPACE}/Backup/$FEM/
    rm -rf legacy_fem_backup-$FEM.tar.gz
    cp -fr ${WORKSPACE}/legacy_fem_backup-$FEM.tar.gz .
    cd ${WORKSPACE}/Backup

else
    mkdir -p $FEM/jobs
    #echo "Copying the Jenkins configurations"    
	#cp -r /proj/eiffel004_config/$FEM/eiffel_home/*.xml ${WORKSPACE}/$FEM/
    
    #Plugins list copy
    #cp -r /proj/eiffel004_config/$FEM/eiffel_home/plugins ${WORKSPACE}/workspace/Test_backup_legacy/$FEM/
    #echo "Fetching the Installed plugin list"
    #mkdir -p $FEM/plugins
    #cd ${WORKSPACE}/$FEM/plugins
    #java -jar /proj/ciexadm200/tools/jcli/jenkins-cli.jar -noCertificateCheck -s https://$FEM-eiffel004.lmera.ericsson.se:8443/jenkins/ -user enmadm100 -ssh groovy = &lt;  ${WORKSPACE}/Backup/plugins.groovy &gt; plugins_$FEM.txt
    #cp -fr plugins_$FEM.txt ${WORKSPACE}/$FEM/
    
    # Job config.xml files copy
    echo "Copying the Jobs configurations"
    cd /proj/eiffel004_config_$FEM/eiffel_home/jobs
    pwd
    #cp -r /proj/eiffel004_config/$FEM/eiffel_home/jobs $WORKSPACE/$FEM/
    find . -type f -name 'config.xml' | cpio -p -d -v ${WORKSPACE}/$FEM/jobs
    

    cd ${WORKSPACE}
    tar -czvf legacy_fem_backup-$FEM.tar.gz $FEM  #archiving the config files
    cd ${WORKSPACE}/Backup
    mkdir -p $FEM
    cp -fr ${WORKSPACE}/legacy_fem_backup-$FEM.tar.gz ./$FEM/
fi	

# git status
# git add . 
# git commit -m "CIP-36604: Legacy $FEM backup"
# git push origin master
#</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.40">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter/>
      <externalDelete/>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>