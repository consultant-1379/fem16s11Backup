<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.3"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.3">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>ENM Cloud Native SVU pipeline eric-cenm-sprint-version-update - autogenerated using JobDSL - all manual changes will be overwritten!This is a Sprint Version Update job for cENM repos to be run at the end of every sprints.This job creates a branch from the given branch/tag (master by default) in the name of the current sprint number (eg print_20.11) and increments the patch version contained in the VERSION_PREFIX. Further, this job also incements the minor version in the master.&lt;h2&gt;Documentation&lt;/h2&gt;&lt;ul&gt;  &lt;li&gt;&lt;a style="font-size: 16px" href="https://confluence-oss.seli.wh.rnd.internal.ericsson.com/display/CI/User+Guide%3A+Sprint+Version+Update+Job" target="_blank" rel="noopener noreferrer"&gt;User Guide&lt;/a&gt;&lt;/li&gt;  &lt;li&gt;&lt;a style="font-size: 16px" href="https://confluence-oss.seli.wh.rnd.internal.ericsson.com/pages/viewpage.action?pageId=374880120" target="_blank" rel="noopener noreferrer"&gt;Admin Guide&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.7"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.8">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@75.0.1">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@2.2.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@75.0.1">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.33">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SLAVE</name>
          <defaultValue>Docker-POC-e2e</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REPO</name>
          <description>Enter the repo. Eg. OSS/com.ericsson.oss.de.containerisation/test-eric-enmsg-kpi-service</description>
          <defaultValue>OSS/com.ericsson.oss.de.containerisation/test-eric-enmsg-kpi-service</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CURRENT_SPRINT</name>
          <description>Enter current sprint number Eg: 20.13</description>
          <defaultValue>21.16</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CHECKOUT_TAG</name>
          <description>This is the reference tag based on which pointfix branch would be created. Use refs/tags/[Current Sprint Number] to pick up the latest release. Eg:  refs/tags/21.04.</description>
          <defaultValue>refs/tags/21.16</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EMAIL</name>
          <defaultValue>paras.setia@ericsson.com</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>PUSH_COMMIT</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2660.vb_c0412dc4e6d">
    <script>def cENMImageRepos = ['OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.de.containerisation/test-eric-enmsg-ebs-topology']
parameters {
    string(name: 'SLAVE', defaultValue: "Docker-POC-e2e")
    string(name: 'CURRENT_SPRINT', description: 'Enter current sprint number Eg: 21.01',defaultValue: "21.01")
    string(name: 'CHECKOUT_TAG', description: 'This is the reference tag based on which pointfix branch would be created. Use refs/tags/SPRINT_[Current Sprint Number] to pick up the latest release. Eg:  refs/tags/SPRINT_20.14.', defaultValue: "*/master")
    string(name: 'EMAIL', defaultValue: "")
    booleanParam(name: 'PUSH_COMMIT', defaultValue: false)
}
pipeline {
    agent { label SLAVE }
    stages {
        stage('Init') {
            steps {
                script {
                    sh '''
                        #Remove running containers
                        running=$(docker ps -a -q| wc -l)
                        if [ "$running" -gt "0" ];then
                            echo "Killing containers"
                            docker rm -f $(docker ps -a -q)
                        fi
                    '''
                    createCsv()
                }
            }
        }
        stage('Update Image Versions') {
         steps {
                script {
                    callCreatePointFixBranchfunction('eric-cenm-create-pointfix-branch-tst', cENMImageRepos, 'Image')
                }
            }
        }

    }
    post {
        always {
            archiveArtifacts artifacts: 'report.csv', allowEmptyArchive: true
            emailext attachmentsPattern: 'report.csv', body: 'cENM Sprint Version Update Completed, See attached file for detailed results.', subject: 'cENM Sprint Version Update Completed', to: EMAIL
            sh '''
                #clean workspace
                echo Workspace ${WORKSPACE}
                rm -rf ${WORKSPACE}/*
            '''
        }
        //unstable {
        //     emailext attachmentsPattern: 'report.csv', body: "cENM Sprint Version Update Failed Pipeline: ${currentBuild.fullDisplayName}", subject: 'cENM Sprint Version Update Failed.', to: EMAIL
        //     archiveArtifacts artifacts: 'report.csv', allowEmptyArchive: true
        //     sh '''
        //         #clean workspace
        //         echo Workspace ${WORKSPACE}
        //         sudo rm -rf ${WORKSPACE}/*
        //     '''
        // }
        // unsuccessful {
        //     emailext attachmentsPattern: 'report.csv', body: "cENM Sprint Version Update Failed Pipeline: ${currentBuild.fullDisplayName}", subject: 'cENM Sprint Version Update Failed.', to: EMAIL
        //     archiveArtifacts artifacts: 'report.csv', allowEmptyArchive: true
        //     sh '''
        //         #clean workspace
        //         echo Workspace ${WORKSPACE}
        //         sudo rm -rf ${WORKSPACE}/*
        //     '''
        // }
    }
}

def createCsv() {
    outString = 'Repository,Repo Type,Old Version,New Version,Pointfix Branch Version,Updated,Status\r\n'
    writeFile file: 'report.csv', text: outString
}

def callCreatePointFixBranchfunction(pointfixjob, repos, repoType) {
    jobStatusSuccess = true
    status = "ERROR"
    updated = "FALSE"
    oldVersion = ""
    newVersion = ""
    repos.each { item -&gt;
        def b = build(job: "${pointfixjob}", parameters: [[$class:'StringParameterValue', name:'REPO', value:String.valueOf("${item}")],[$class:'StringParameterValue', name:'CURRENT_SPRINT', value:String.valueOf("${params.CURRENT_SPRINT}")],[$class:'StringParameterValue', name:'CHECKOUT_TAG', value:String.valueOf("${params.CHECKOUT_TAG}")],[$class:'StringParameterValue', name:'EMAIL', value:String.valueOf("${params.EMAIL}")],[$class:'BooleanParameterValue', name:'PUSH_COMMIT', value: "${params.PUSH_COMMIT}"]], propagate: false, wait: true)

        currentBuild.description = "Sprint Version Update Branch: $b.buildVariables.BRANCH_NAME&lt;BR&gt;"
        currentBuild.description += "Branch based on tag/branch: CHECKOUT_TAG"
        echo "Repo = ${item}, Result = $b.result"

        if("$b.result" == 'SUCCESS') {
            status = "OK"
            jobStatusSuccess = jobStatusSuccess &amp;&amp; true
        } else {
            status = "ERROR"
            jobStatusSuccess = jobStatusSuccess &amp;&amp; false
        }

        readContent = readFile 'report.csv'
        outString = readContent + "${item},$repoType,$b.buildVariables.oldMinorVersion,$b.buildVariables.newMinorVersion,$b.buildVariables.newVersion,$b.buildVariables.updated,$status\r\n"
        writeFile file: 'report.csv', text: outString
        if(!jobStatusSuccess) {
            currentBuild.result = "UNSTABLE"
            //unstable("Stage unstable")
            //     error("Error while updating the versions for the repo type: $repoType")
        }
    }
}

</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>