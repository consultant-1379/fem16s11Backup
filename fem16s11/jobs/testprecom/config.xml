<?xml version="1.0" encoding="UTF-8"?><flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@69.0.3">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@69.0.3">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <EnvInjectJobProperty plugin="envinject@2.1.5">
      <info>
        <propertiesContent>REPO=OSS/com.ericsson.oss.containerisation/eric-enmsg-msap</propertiesContent>
        <secureGroovyScript plugin="script-security@1.75">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57.2">
    <script>#!/usr/bin/env groovy

/* IMPORTANT:
 *
 * In order to make this pipeline work, the following configuration on Jenkins is required:
 * - slave with a specific label (see pipeline.agent.label below)
 * - credentials plugin should be installed and have the secrets with the following names:
 *   + lciadm100credentials (token to access Artifactory)
 */

def defaultBobImage = 'armdocker.rnd.ericsson.se/sandbox/adp-staging/adp-cicd/bob.2.0:1.5.2-0'
def bob = new BobCommand()
        .bobImage(defaultBobImage)
        .envVars([ISO_VERSION: '${ISO_VERSION}'])
        .needDockerSocket(true)
        .toString()
def GIT_COMMITTER_NAME = 'lciadm100'
def GIT_COMMITTER_EMAIL = 'lciadm100@ericsson.com'
def failedStage = ''

def emailReport() {
    def Repo_Mail = ""
    def mail_list = ["eric-enmsg-access-control":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-amos":"PDLENMOUTS@pdl.internal.ericsson.com","eric-enmsg-cellserv":"PDLNMFEATU@pdl.internal.ericsson.com","eric-enmsg-autoprovisioning":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-cmevents":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-cmutilities":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-com-ecim-mscm":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-comecimpolicy":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-dc-history":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-domain-proxy-coordinator":"EricssonHyderabad.ENMMisty@tcs.com","eric-enm-dps-schemamgt":"PDLENIGMAE@pdl.internal.ericsson.com","eric-enmsg-dlms":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-dpmediation":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-eventbasedclient":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-element-manager":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-flowautomation":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-fm-alarm-processing":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-fm-history":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-fm-service":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-general-scripting":"PDLENMOUTS@pdl.internal.ericsson.com","eric-enmsg-gossiprouter-cache":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-gossiprouter-remoting":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-identity-mgmt-service":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-import-export-service":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-ip-service-management":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-jmsserver":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-kpi-calc-serv":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-kpi-service":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-lcmservice":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-medrouter":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-msapgfm":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-mscm":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-mscmapg":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-mscmip":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-msfm":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-mskpirt":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-msnetlog":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-mspm":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-mspmip":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-mssnmpfm":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-mssnmpcm":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-nbi-bnsi-fm":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-nb-alarm-irp-agent-corba":"EricssonHyderabad.ENMGalaxy@tcs.com","eric-enmsg-nb-fm-snmp":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-nodecli":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-nedo-serv":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-networkexplorer":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-node-plugins":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-openidm":"PDLNMFEATU@pdl.internal.ericsson.com","eric-enmsg-pmservice":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-pki-ra-service":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-pmic-router-policy":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-sso":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-openidm":"PDLNMFEATU@pdl.internal.ericsson.com","eric-enmsg-sps-service":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-supervisionclient":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-sa-service":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-security-service":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-sentinel":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-shm-core-service":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-shmservice":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-smrs-service":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-uiservice":"PDLTEAMTOT@pdl.internal.ericsson.com","eric-enmsg-visinaming-nb":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-visinaming-sb":"EricssonHyderabad.ENMMisty@tcs.com","eric-enmsg-vault-service":"PDLNMFEATU@pdl.internal.ericsson.com","eric-enmsg-web-push-service":"PDLTEAMTOT@pdl.internal.ericsson.com"]
        mail_list.each { each_repo,each_email -&gt;
            if (each_repo == env.REPO.split('/').last()) {
                Repo_Mail = each_email;
                echo "${Repo_Mail}"
            }
        };
        if (Repo_Mail != "") {
           try {
                mail to: "${Repo_Mail}",
                    subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                    body: "Failure on ${env.BUILD_URL}"
            } catch( err ){
             echo "$err"
            }
        }
}
pipeline {
    agent {
        label 'Cloud-Native'
    }
    stages {
        stage('Checkout SG RPM Git Repository') {
            steps {
                script {
                    echo "heloo"
                }
            }
        }
               
    }
    post {
        success {
            script {
                emailReport()
            }
        }
    }
}

// More about @Builder: http://mrhaki.blogspot.com/2014/05/groovy-goodness-use-builder-ast.html
import groovy.transform.builder.Builder
import groovy.transform.builder.SimpleStrategy

@Builder(builderStrategy = SimpleStrategy, prefix = '')
class BobCommand {
    def bobImage = 'bob.2.0:latest'
    def envVars = [:]
    def needDockerSocket = false

    String toString() {
        def env = envVars
                .collect({ entry -&gt; "-e ${entry.key}=\"${entry.value}\"" })
                .join(' ')

        def cmd = """\
            |docker run
            |--init
            |--rm
            |--workdir \${PWD}
            |--user \$(id -u):\$(id -g)
            |-v \${PWD}:\${PWD}
            |-v /etc/group:/etc/group:ro
            |-v /etc/passwd:/etc/passwd:ro
            |-v \${HOME}/.m2:\${HOME}/.m2
            |-v \${HOME}/.docker:\${HOME}/.docker
            |${needDockerSocket ? '-v /var/run/docker.sock:/var/run/docker.sock' : ''}
            |${env}
            |\$(for group in \$(id -G); do printf ' --group-add %s' "\$group"; done)
            |${bobImage}
            |"""
        return cmd
                .stripMargin()           // remove indentation
                .replace('\n', ' ')      // join lines
                .replaceAll(/[ ]+/, ' ') // replace multiple spaces by one
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>