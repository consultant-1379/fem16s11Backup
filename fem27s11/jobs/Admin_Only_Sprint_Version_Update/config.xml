<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.0"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>UNDEFINED</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@75.0.1">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>20</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.23.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty plugin="eiffel-core@75.0.1">
      <sequentialLinkingEnabled>false</sequentialLinkingEnabled>
    </com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty plugin="eiffel-core@75.0.1">
      <messagingEnabled>false</messagingEnabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@75.0.1">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@1.0.3">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.33">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition plugin="validating-string-parameter@2.4">
          <name>REPO</name>
          <description>Repo name should be like this: OSS/GroupId/ArtifactId or LITP/ArtifactID &lt;br&gt; 
for example: OSS/com.ericsson.oss.test/test-repo
</description>
          <defaultValue></defaultValue>
          <regex>(LITP|OSS)\/([a-z.\d-A-Z]+)\/([a-z.\dA-Z_a-z-A-Z]+)</regex>
          <failedValidationMessage>Please enter a valid repository name.</failedValidationMessage>
        </hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.5">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <com.ericsson.duraci.messaging.UserDomainSuffixJobProperty plugin="eiffel-core@75.0.1">
      <enabled>false</enabled>
      <userDomainSuffix></userDomainSuffix>
    </com.ericsson.duraci.messaging.UserDomainSuffixJobProperty>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>gcm</name>
        <url>${GERRIT_MIRROR_new}/${REPO}</url>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>gcn</name>
        <url>${GERRIT_CENTRAL_new}/${REPO}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.PerBuildTag/>
      <hudson.plugins.git.extensions.impl.UserIdentity>
        <name>ENM_Jenkins</name>
      </hudson.plugins.git.extensions.impl.UserIdentity>
    </extensions>
  </scm>
  <assignedNode>GridEngine</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(System)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command>#!/usr/bin/python

from xml.dom import minidom
import subprocess
import urllib2
import xml

userSignum = open(&apos;userSignum.txt&apos;, &apos;w&apos;)

def main():
    buildURL = &quot;https://fem126-eiffel004.lmera.ericsson.se:8443/jenkins/job/Admin_Sprint_Version_Update/lastBuild&quot;
    subprocess.call([&quot;wget %s/api/xml --output-document=lastBuildREST.xml&quot; % buildURL], stderr=subprocess.PIPE, shell=True)
    builtOn = createxmldoc(&quot;lastBuildREST.xml&quot;, &quot;userId&quot;)
    
    try:
        userSignum.write(&quot;BUILD_USER_ID=&quot; + builtOn[0].firstChild.nodeValue)
    except:
        userSignum.write(&quot;BUILD_USER_ID=&quot; + &quot;&quot;)
    
    userSignum.close()
# ############################################ #
# Parsing .xml file by tag value               #
# ############################################ #        
def createxmldoc(ConfigFile, tag):
    try:
        xmldoc = minidom.parse(ConfigFile)
        return xmldoc.getElementsByTagName(tag)
    except urllib2.HTTPError as err:
        if err.code == 404:
            pass
    except:
        pass
    
main()</command>
      <configuredLocalRules/>
    </hudson.plugins.python.Python>
    <hudson.tasks.Shell>
      <command>export currentVersion=`mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version|grep &quot;^[0-9]*\.[0-9]*\.[0-9]*&quot;`
export cleanedVersion=`echo $currentVersion | sed -e &apos;s/[^0-9][^0-9]*$//&apos;`
export incrementalVersion=`echo $cleanedVersion | cut -d&quot;.&quot; -f3`
export minorVersion=`echo $cleanedVersion | cut -d&quot;.&quot; -f2`
export majorVersion=`echo $cleanedVersion | cut -d&quot;.&quot; -f1`
export nextminorVersion=$(($minorVersion+1))
export newVersion=`echo $majorVersion.$nextminorVersion.1-SNAPSHOT`
find . -name &quot;pom.xml&quot; -exec sed -i &quot;s/${currentVersion}/${newVersion}/g&quot; {} \; 2&gt;/dev/null</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>git add .
if [ &quot;$(git status --porcelain)&quot; != &quot;&quot; ]; then
    git commit -m &quot;Sprint version update&quot;
fi</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
    <com.ericsson.de.multi.master.ReadFile plugin="multi-master@1.0.13">
      <filePath>userSignum.txt</filePath>
    </com.ericsson.de.multi.master.ReadFile>
  </builders>
  <publishers>
    <hudson.plugins.git.GitPublisher plugin="git@4.2.2">
      <configVersion>2</configVersion>
      <pushMerge>false</pushMerge>
      <pushOnlyIfSuccess>false</pushOnlyIfSuccess>
      <forcePush>false</forcePush>
      <branchesToPush>
        <hudson.plugins.git.GitPublisher_-BranchToPush>
          <targetRepoName>gcn</targetRepoName>
          <branchName>master</branchName>
          <rebaseBeforePush>false</rebaseBeforePush>
        </hudson.plugins.git.GitPublisher_-BranchToPush>
      </branchesToPush>
    </hudson.plugins.git.GitPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.37">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>30</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description></description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER} - ${ENV,var=&quot;REPO&quot;} by ${ENV, var=&quot;BUILD_USER_ID&quot;}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>