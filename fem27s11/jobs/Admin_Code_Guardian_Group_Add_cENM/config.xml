<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>&lt;font size=2&gt;&lt;strong&gt;With this job you can add the Code guardian group(s) to the repos&lt;br&gt;&#13;
Also, we can add multiple Code Guardian groups to the repo by specifying group names separated by a space.&lt;/strong&gt;&lt;/font&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.0"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@69.0.3">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.24.1">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty plugin="eiffel-core@69.0.3">
      <sequentialLinkingEnabled>false</sequentialLinkingEnabled>
    </com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty plugin="eiffel-core@69.0.3">
      <messagingEnabled>false</messagingEnabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@69.0.3">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@1.0.3">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.29">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REPO</name>
          <description>&lt;font size="2"&gt;Enter the gerrit repo above (Example: OSS/com.ericsson.oss.ci/ciexe_test)&lt;/font&gt;&lt;br&gt;</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GUARD_GROUP_NAME</name>
          <description>&lt;font size=2&gt;It is possible to insert an Array of groups. For example : CI_Test_guard enm_Test_guard &lt;br&gt;
&lt;font color=red size=2&gt;Please make sure only one space is given between two groups, Also make sure no extra space has given in the end of last group&lt;/font&gt;&lt;br&gt;</description>
          <defaultValue>cENM_Guard</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DESCRIPTION</name>
          <description>&lt;font size="2"&gt;Enter the description that you find in the repo under general tab&lt;/font&gt;&lt;br&gt;</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.5">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <com.ericsson.duraci.messaging.UserDomainSuffixJobProperty plugin="eiffel-core@69.0.3">
      <enabled>false</enabled>
      <userDomainSuffix/>
    </com.ericsson.duraci.messaging.UserDomainSuffixJobProperty>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30"/>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>GridEngine</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(System)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <com.ericsson.de.multi.master.EnvironmentBuilder plugin="multi-master@1.0.13">
      <envVars>
        <com.ericsson.de.multi.master.EnvVar>
          <name>PATH</name>
          <value>/usr/bin/:/bin/</value>
        </com.ericsson.de.multi.master.EnvVar>
      </envVars>
    </com.ericsson.de.multi.master.EnvironmentBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

mkdir test
REPO=${REPO// /}
GUARD_GROUP_NAME=${GUARD_GROUP_NAME}
Deliverable=${DESCRIPTION}
cd test
git init

git pull ssh://staging-gerrit.sero.gic.ericsson.se:29418/$REPO refs/meta/config

IFS=' ' read -ra ADDR &lt;&lt;&lt; "$GUARD_GROUP_NAME"
for group in "${ADDR[@]}"; do
    ssh -p 29418 staging-gerrit.sero.gic.ericsson.se gerrit ls-groups -v | grep $group &gt; output.txt
    GroupID_Sub=$(grep ^$group output.txt | cut -f 2)
    rm output.txt
    echo -e "$GroupID_Sub\t$group" &gt;&gt; groups
done

git add .
git commit -m "CIS-135374 Added new group"
git push ssh://staging-gerrit.sero.gic.ericsson.se:29418/$REPO HEAD:refs/meta/config

echo "************* groups file pushed **************"
echo "*************config file push******************"

echo $(grep "inheritFrom" project.config) &gt;&gt; parent

while read line
do
    p=$(echo ${line} | awk -F " " '{print $3}')
done &lt; parent

while read line; do
    if  echo "${line}" | grep -q "owner"; then echo "${line}"&gt;&gt; owner; fi
done &lt; project.config

while read line
do
    owner=$(echo  ${line} | awk -F " " '{print $4}')
    echo "${owner}" &gt;&gt; ownername
done &lt; owner

rm -rf project.config

while read line
do
    groupname=$(echo ${line} | awk -F " " '{print $2}')
    echo "${groupname}" &gt;&gt; groupname
done &lt; groups

a=0

while read line
do 
    if [ ${a} -ge 2 ]
    then
        echo "${line}" &gt;&gt; groupname1
    fi
    a=$((a+1))
done &lt; groupname

echo -e "[access]
        inheritFrom = $p"  &gt; project.config
echo -e "[access \"refs/*\"]" &gt;&gt; project.config
while read line
do
echo -e "        owner = group ${line}" &gt;&gt; project.config
done &lt; ownername
while read line; do if [ $line != $GUARD_GROUP_NAME ]; then if grep -wq $line ownername; then continue; else echo -e "        create = group $line" &gt;&gt; project.config; fi;fi; done &lt; groupname1
while read line; do if [ $line != $GUARD_GROUP_NAME ]; then if grep -wq $line ownername; then continue; else echo -e "        forgeCommitter = group $line" &gt;&gt; project.config; fi;fi; done &lt; groupname1
while read line; do if [ $line != $GUARD_GROUP_NAME ]; then if grep -wq $line ownername; then continue; else echo -e "        pushTag = group $line" &gt;&gt; project.config; fi;fi; done &lt; groupname1
while read line; do if grep -wq $line ownername; then continue; else echo -e "        label-Code-Review = -2..+2 group $line" &gt;&gt; project.config; fi; done &lt; groupname1
while read line; do if grep -wq $line ownername; then continue; else echo -e "        label-Verified = -1..+1 group $line" &gt;&gt; project.config; fi; done &lt; groupname1
while read line; do if [ $line != $GUARD_GROUP_NAME ]; then if grep -wq $line ownername; then continue; else echo -e "        rebase = group $line" &gt;&gt; project.config; fi;fi; done &lt; groupname1
echo -e "        submit = group $GUARD_GROUP_NAME" &gt;&gt; project.config

echo -e "[project]
        description = $Deliverable
[receive]
        requireChangeId = true
[submit]
        action = fast forward only
        mergeContent = false
[access \"refs/for/refs/heads/master\"]" &gt;&gt; project.config

echo -e "        pushMerge = group $GUARD_GROUP_NAME" &gt;&gt; project.config

echo -e "[access \"refs/heads/master\"]" &gt;&gt; project.config

echo -e "        push = group $GUARD_GROUP_NAME" &gt;&gt; project.config
echo -e "        exclusiveGroupPermissions = push pushMerge" &gt;&gt; project.config
echo -e "        pushMerge = group $GUARD_GROUP_NAME" &gt;&gt; project.config

echo -e "[plugin \"eiffel\"]
        enabled = true
        rmq-domain = eiffel004.camo.gerrit
        rmq-exchange = mb401-eiffel004
        rmq-server = amqp://mb401-eiffel004.mo.ca.am.ericsson.se:5672" &gt;&gt; project.config
rm -rf groupname
rm -rf groupname1
rm -rf owner
rm -rf ownername
rm -rf parent
git add .
git commit -m "CIS-135374 Added access controls"
git push ssh://staging-gerrit.sero.gic.ericsson.se:29418/$REPO HEAD:refs/meta/config

echo "************* end ******************"</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.37">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter/>
      <externalDelete/>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>