<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions/>
  <description>&lt;br&gt; This job build the artifact again with a full version number. Code coverage and Unit tests are ran again. If the job is successful the artifact is published to the CI Portal.&lt;br&gt;</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>20</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>true</useBuildBlocker>
      <blockLevel>NODE</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs>onboardingtwo_PCR</blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <EnvInjectJobProperty plugin="envinject@2.1.5">
      <info>
        <propertiesContent>REPO=OSS/com.ericsson.ci.test/onboardingtwo
ADMIN_CONTROL=false
SKIP_SONAR=true
SKIP_SONAR_GLOBAL=
PUBLISH_SITE=false
BRANCH=master
TEAM_NAME=
GERRIT_REFSPEC=refs/heads/master
SLAVE_LABEL=fem27s11_podc_CIAgent||fem27s11_podh_CIAgent||fem27s11_podj_CIAgent
JDK_HOME=JDK 1.8.0_281
MVN_HOME=Maven 3.5.3
MVN_PCR=-V -U jacoco:prepare-agent install jacoco:report pmd:pmd
MVN_PCR_INT=-V -Dts -P jboss_managed_local install -U
MVN_Release=-V -Dresume=false release:prepare release:perform -DpreparationGoals=&quot;install -U&quot; -Dgoals=&quot;clean deploy pmd:pmd jacoco:report -U&quot; -DlocalCheckout=true
MVN_SONAR=sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.branch.name=${SONAR_BRANCH} -Dsonar.branch.target=${BRANCH}
MVN_ARQUILLIAN=
POSTGRES=false
POSTGRES_DB_NAME=my_pg_db
POSTGRES_DB_VERSION=9.2.13
VERSANT=false
VERSANT_DB_NAME=dps_integration
VERSANT_DB_VERSION=1.0.33
SQ_SERVER=sonarqube enterprise 79
TESTWARE_REPO=
IT_FOLDER=
MVN_VERIFY_BASE_OPTIONS=
SOURCES_DIR=.
JAVA_MONITORED_SERVICES=.*jboss.*
IT_REPORT_TYPE=surefire
COMPOSE_FILE=
TESTRUNNER_JAVA_VERSION=jdk8_tmp
SNAPSHOT_CODE_RPMS_CONTAINER=im_jboss
COMPOSE_HTTP_TIMEOUT=500
IGNORE_RPMS=
DEFAULT_TEAM=
AUTO_DELIVER=false
CREATE_DELIVERY_GROUP=false
PRE_TEST_SCRIPT=pre_test.sh
POST_TEST_SCRIPT=post_test.sh
DOCKER_COMPOSE_OPTIONS=-f docker-compose.yml
IT_REPO=OSS/com.ericsson.oss.mediation.pm.testsuite/pm-mediation-vertical-slice
INTEGRATION_TESTS=
ADDITIONAL_SYSTSEM_PROPERTIES=
TOPIC=
deployPackage=
PYTHON_HOME=/proj/ciexadm200/tools/python-2.7.8
ENM_PY=/proj/ciexadm200/tools/enm_py-2.7.8_reqmnts-2.0
PYTHONPATH=$ENM_PY/usr/lib/python2.7/site-packages:$ENM_PY/usr/lib64/python2.7/site-packages
PATH+EXTRA=/proj/ciexadm200/tools/python-2.7.8/bin:$ENM_PY/usr/bin
ARTIFACTS_WILDCARDS=**/*.log,**/*.ear,**/*.rpm</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>@Library(&apos;ci-pipeline-lib&apos;) _
pipeline {
    agent { label &apos;GridEngine&apos; }
    options {
        timeout(time: 60, unit: &apos;MINUTES&apos;)
        timestamps()
    }
    stages {
        stage(&apos;Pre-step&apos;) {
            steps {
                ci_pcr_pre()
            }
        }
        stage(&apos;Clone&apos;) {
            steps {
                ci_pcr_clone()
            }
        }
        stage(&apos;Init&apos;) {
            steps {
                ci_pcr_init()
                ci_delivery_group_init()
            }
        }
        stage(&apos;Release&apos;) {
            steps {
                ci_full_release_build()
                ci_merge_to_master()
            }
        }
        stage(&apos;Delivery-Group&apos;) {
            when {
                environment name: &apos;CREATE_DELIVERY_GROUP&apos;, value: &apos;true&apos;
            }
            steps {
                ci_create_delivery_group()
            }
        }
        stage(&apos;Sonar&apos;) {
            when {
                environment name: &apos;SKIP_SONAR_GLOBAL&apos;, value: &apos;false&apos;
            }
            steps {
                ci_release_sonar()
            }
        }
    }
    post {
        always {
            ci_release_post()
            ci_reports()
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>true</disabled>
</flow-definition>