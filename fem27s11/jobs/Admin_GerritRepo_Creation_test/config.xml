<?xml version="1.1" encoding="UTF-8"?><project>
  <actions/>
  <description>This Jenkins Job allow the user to create a brand new Gerrit repository&lt;br&gt;&#13;
&lt;br&gt;&#13;
&#13;
The following jenkins job will create only cENM repo in Gerrit, the PCR and release job need to be created manual with old procedure&lt;br&gt;&#13;
&lt;br&gt;&#13;
&#13;
Confluence: &lt;a href="https://confluence-oss.seli.wh.rnd.internal.ericsson.com/display/cENMCICD/Automated+job+to+create+new+Gerrit+repositories+based+on+a+cENM+specific+archetype"&gt;Automated+job+to+create+new+Gerrit+repositories+based+on+a+cENM+specific+archetype&lt;/a&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.8">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@75.0.1">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@2.2.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>30</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty plugin="eiffel-core@75.0.1">
      <sequentialLinkingEnabled>false</sequentialLinkingEnabled>
    </com.ericsson.duraci.messaging.SequentialSemanticEiffelMessageLinkingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty plugin="eiffel-core@75.0.1">
      <messagingEnabled>false</messagingEnabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelConfigurationNotificationMessagingJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@75.0.1">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition plugin="validating-string-parameter@2.8">
          <name>REPO_NAME</name>
          <description>&lt;font size="2"&gt;Enter the gerrit repo above (Example: OSS/com.ericsson.oss.ci/ciexe_test).&lt;/font&gt;</description>
          <defaultValue/>
          <regex>(OSS)\/.*</regex>
          <failedValidationMessage/>
        </hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>PARENT_GROUP_RIGHTS</name>
          <description>&lt;font size="2"&gt;Inherited access rights.&lt;/font&gt;</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>OSS/ENM-Parent/SQ-Gate</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>REPO_TYPE</name>
          <description>&lt;font size="2"&gt;Enter the Repository type.&lt;/font&gt;</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Service_Group</string>
              <string>Base_Image</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>INCLUDED</name>
          <description>&lt;font size="2"&gt;Service Group Repo configuration.&lt;/font&gt;</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>HCL</string>
              <string>NO HCL</string>
              <string>NO MERGE</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition plugin="validating-string-parameter@2.8">
          <name>SPRINT_NUMBER</name>
          <description>&lt;font size="2"&gt;Sprint Number, e.g. 21.07.&lt;/font&gt;
</description>
          <defaultValue/>
          <regex>(\d)+(\.\d+)</regex>
          <failedValidationMessage/>
        </hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition>
        <hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition plugin="validating-string-parameter@2.8">
          <name>JIRA_TICKET</name>
          <description>&lt;font size="2"&gt;Jira Ticket reference, e.g. CIS-12345.&lt;/font&gt;</description>
          <defaultValue/>
          <regex>(CIS-).*(\d)</regex>
          <failedValidationMessage/>
        </hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.33">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <com.ericsson.duraci.messaging.UserDomainSuffixJobProperty plugin="eiffel-core@75.0.1">
      <enabled>false</enabled>
      <userDomainSuffix/>
    </com.ericsson.duraci.messaging.UserDomainSuffixJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>Cloud-Native</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(System)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

CI_REPO="OSS/com.ericsson.oss.containerisation/enm-containerisation-ci-pipeline"
ARCH_REPO="OSS/com.ericsson.oss.containerisation/enm-cn-ci-pipeline-archtype-generator"

git clone ${GERRIT_MIRROR}/${ARCH_REPO}
git clone ${GERRIT_MIRROR}/${CI_REPO}

REPO=${REPO_NAME// /}
ARTIFACT_ID=${REPO##*/}
ARCH_ARTIFACT_ID=${ARCH_REPO##*/}
PARENT_GROUP_RIGHTS=${PARENT_GROUP_RIGHTS// /}

#define Gerrit guardian groups
GUARD_GROUP_NAME="CTF_guard Cloud_Native_TC_Group cENM_Guard"
GURAD_GROUP1="CTF_guard"
GURAD_GROUP2="Cloud_Native_TC_Group"
GURAD_GROUP3="cENM_Guard"

echo "Tell $ARTIFACT_ID"

echo "*******************Creating the repository in Gerrit*****************"

echo "*******************Creating repository "$REPO" with required master branch only********************"

GERRIT_CENTRAL_HOST=$(echo ${GERRIT_CENTRAL} | sed -e 's/ssh:\/\/\(.*\):29418/\1/')

ssh -p 29418 ${GERRIT_CENTRAL_HOST} gerrit ls-projects | grep -Fx ${REPO}

if [ $? -eq 0 ]; then
    echo "${REPO} already existing"
else
    echo "Proceed to ${REPO} creation"
    ssh -p 29418 ${GERRIT_CENTRAL_HOST} self-service create-project --parent ${PARENT_GROUP_RIGHTS} ${REPO} -b master --empty-commit -o CI_Infrastructure_ENM_admin || { echo 'ERROR: Check Job Parameters'; exit 1; }
fi

echo "*******************Adding access rights for "${GUARD_GROUP_NAME}"*******************"

mkdir test
cd test
git init

git pull ${GERRIT_CENTRAL}/${REPO} refs/meta/config

#manage multiple guardian groups
IFS=' ' read -ra ADDR &lt;&lt;&lt; "${GUARD_GROUP_NAME}"
for group in "${ADDR[@]}"; do
    ssh -p 29418 ${GERRIT_CENTRAL_HOST} gerrit ls-groups -v | grep ${group} &gt; output.txt
    GroupID_Sub=$(grep ^${group} output.txt | cut -f 2)
    rm output.txt
    echo -e "${GroupID_Sub}\t${group}" &gt;&gt; groups
done

git add .
git commit -m "${JIRA_TICKET}: Added new group"
git push ${GERRIT_CENTRAL}/${REPO} HEAD:refs/meta/config

echo "************* groups file pushed **************"
echo "*************config file push******************"


rm -rf project.config

echo -e "[access]
        inheritFrom = ${PARENT_GROUP_RIGHTS}
[access \"refs/*\"]
        owner = group CI_Infrastructure_ENM_admin" &gt; project.config

echo -e "create = group ${GURAD_GROUP1}" &gt;&gt; project.config;
echo -e "create = group ${GURAD_GROUP2}" &gt;&gt; project.config;
echo -e "forgeCommitter = group ${GURAD_GROUP1}" &gt;&gt; project.config;
echo -e "forgeCommitter = group ${GURAD_GROUP2}" &gt;&gt; project.config;
echo -e "pushTag = group ${GURAD_GROUP1}" &gt;&gt; project.config;
echo -e "pushTag = group ${GURAD_GROUP2}" &gt;&gt; project.config;
echo -e "label-Code-Review = -2..+2 group ${GURAD_GROUP1}" &gt;&gt; project.config;
echo -e "label-Code-Review = -2..+2 group ${GURAD_GROUP2}" &gt;&gt; project.config;
echo -e "label-Code-Review = -2..+2 group ${GURAD_GROUP3}" &gt;&gt; project.config;
echo -e "label-Verified = -1..+1 group ${GURAD_GROUP1}" &gt;&gt; project.config;
echo -e "label-Verified = -1..+1 group ${GURAD_GROUP2}" &gt;&gt; project.config;
echo -e "label-Verified = -1..+1 group ${GURAD_GROUP3}" &gt;&gt; project.config;
echo -e "rebase = group ${GURAD_GROUP1}" &gt;&gt; project.config;
echo -e "rebase = group ${GURAD_GROUP2}" &gt;&gt; project.config;
echo -e "submit = group ${GURAD_GROUP3}" &gt;&gt; project.config;

echo -e "[project]
        description = 
[receive]
        requireChangeId = true
[submit]
        action = fast forward only
        mergeContent = false
[access \"refs/for/refs/heads/master\"]" &gt;&gt; project.config

echo -e "pushMerge = group ${GURAD_GROUP3}" &gt;&gt; project.config;

echo -e "[access \"refs/heads/master\"]" &gt;&gt; project.config

echo -e "push = group ${GURAD_GROUP3}" &gt;&gt; project.config;
echo -e "exclusiveGroupPermissions = push pushMerge" &gt;&gt; project.config;
echo -e "pushMerge = group ${GURAD_GROUP3}" &gt;&gt; project.config;

echo -e "[plugin \"eiffel\"]
        enabled = true
        rmq-domain = eiffel004.camo.gerrit
        rmq-exchange = mb401-eiffel004
        rmq-server = amqp://mb401-eiffel004.mo.ca.am.ericsson.se:5672" &gt;&gt; project.config

git add .
git commit -m "${JIRA_TICKET}: Added access controls"
git push ssh://gerrit.ericsson.se:29418/${REPO} HEAD:refs/meta/config
cd ..
rm -rf test/

echo "*******************Running Archetype Generator Tool*****************"
git clone ssh://gerrit.ericsson.se:29418/${REPO}

cd ${ARCH_ARTIFACT_ID}
docker build . -t archgen_pcr
docker run --entrypoint "sh" -v ${WORKSPACE}/temporary_folder:/data/output archgen_pcr -c "python run.py --service_name  $ARTIFACT_ID --service_type 0 --service_description TestSG --path_of_archtype /data/output --product_number 123456 --is_depend_on_jboss_base_image n"

cd ..
cp -r temporary_folder/${ARTIFACT_ID}/* ${ARTIFACT_ID}
cd ${ARTIFACT_ID}

git add --all
git commit -m "${JIRA_TICKET}: Adding artifacts/archetype"
git push

echo "************* end ******************"

echo REPO=${REPO} &gt; ${WORKSPACE}/env.properties
echo CI_REPO=${CI_REPO} &gt;&gt; ${WORKSPACE}/env.properties

#calculate dropback sprint number
SPR_MAJOR_VERSION=$(echo ${SPRINT_NUMBER} | awk -F"." '{print $1}')
SPR_MINOR_VERSION=$(echo ${SPRINT_NUMBER} | awk -F"." '{print $2}')


SPR_MINOR_VERSION_1=$(expr ${SPR_MINOR_VERSION} - 1)
if [ "${SPR_MINOR_VERSION}" -le 10 ] ; then 
   echo DROPBACK_SPRINT_NUMBER="${SPR_MAJOR_VERSION}.0${SPR_MINOR_VERSION_1}" &gt;&gt; ${WORKSPACE}/env.properties
else
   echo DROPBACK_SPRINT_NUMBER="${SPR_MAJOR_VERSION}.${SPR_MINOR_VERSION_1}" &gt;&gt; ${WORKSPACE}/env.properties
fi</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.4.0">
      <info>
        <propertiesFilePath>${WORKSPACE}/env.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

PROJECT_NAME=${CI_REPO##*/}

GERRIT_MIRROR_HOST=$(echo ${GERRIT_MIRROR} | sed -e 's/ssh:\/\/\(.*\):29418/\1/')
rm -rf ${PROJECT_NAME}
git clone ${GERRIT_MIRROR}/${CI_REPO} &amp;&amp; scp -p -P 29418 ${GERRIT_MIRROR_HOST}:hooks/commit-msg ${PROJECT_NAME}/.git/hooks/

cd ${PROJECT_NAME}

if [[ "${REPO_TYPE}" == "Service_Group" ]]; then
   COMMIT_MESSAGE="${JIRA_TICKET}: add new Service Group repo"
   echo "${REPO_NAME}" &gt;&gt; jenkins/projects_service_group
else
   COMMIT_MESSAGE="${JIRA_TICKET}: add new Base Image repo"
   echo "${REPO_NAME}" &gt;&gt; jenkins/projects_common
fi

git add --all
git commit -m "${COMMIT_MESSAGE}"
git remote set-url origin --push ${GERRIT_CENTRAL}/${CI_REPO}
    
git push origin HEAD:refs/for/master/VALIDATION &gt; review_message.txt 2&gt;&amp;1
cat review_message.txt

REVIEW_DETAILS=$(grep -F "${COMMIT_MESSAGE}" review_message.txt | tr -s " ")
REVIEW_LINK=$(cut -d' ' -f2 &lt;&lt;&lt;"${REVIEW_DETAILS}")

echo REVIEW_DATE=$(date "+%d-%m-%Y") &gt;&gt; ${WORKSPACE}/env.properties
echo REVIEW_LINK=${REVIEW_LINK} &gt;&gt; ${WORKSPACE}/env.properties</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.4.0">
      <info>
        <propertiesFilePath>${WORKSPACE}/env.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.40">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter/>
      <externalDelete/>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>