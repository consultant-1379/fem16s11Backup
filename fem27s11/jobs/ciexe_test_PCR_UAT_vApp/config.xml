<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Job is created to test E2C Jenkins setup in silent mode&#xd;
&#xd;
 the test settings.xml used for Nexus Migration was ( -s /home/enmadm100/.m2/settingsE2C.xml  ) </description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.0"/>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>true</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs>ci-flow-test_Release</blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty plugin="eiffel-core@75.0.1">
      <scriptEnabled>false</scriptEnabled>
    </com.ericsson.duraci.messaging.ImplicitMessagingContributorProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>20</daysToKeep>
        <numToKeep>15</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.23.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty plugin="eiffel-core@75.0.1">
      <messagingEnabled>false</messagingEnabled>
      <jobFinishedDisabled>false</jobFinishedDisabled>
    </com.ericsson.duraci.messaging.ImplicitEiffelMessagingJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.33">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.5">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.1.5">
      <info>
        <propertiesContent>REPO=OSS/com.ericsson.oss.mediation.fm.handlers/axe-fm-handler-code
ADMIN_CONTROL=true
SKIP_SONAR=false
SKIP_SONAR_GLOBAL=false
PUBLISH_SITE=true
BRANCH=master
TEAM_NAME=
GERRIT_REFSPEC=refs/heads/master
SLAVE_LABEL=fem27s11_podc_CIAgent
JDK_HOME=JDK 1.8.0_291
MVN_HOME=Maven 3.5.3
MVN_PCR=-X -V -U jacoco:prepare-agent install jacoco:report pmd:pmd
MVN_PCR_INT=-V -Dts -P jboss_managed_local install -U
MVN_Release=-V -Dresume=false release:prepare release:perform -DpreparationGoals=&quot;install -U&quot; -Dgoals=&quot;clean deploy pmd:pmd jacoco:report -U&quot; -DlocalCheckout=true
MVN_SONAR=sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.branch.name=${SONAR_BRANCH} -Dsonar.branch.target=master
MVN_ARQUILLIAN=
POSTGRES=false
POSTGRES_DB_NAME=my_pg_db
POSTGRES_DB_VERSION=9.2.13
VERSANT=false
VERSANT_DB_NAME=dps_integration
VERSANT_DB_VERSION=1.0.33
SQ_SERVER=sonarqube enterprise 89
TESTWARE_REPO=
IT_FOLDER=
MVN_VERIFY_BASE_OPTIONS=
SOURCES_DIR=.
JAVA_MONITORED_SERVICES=.*jboss.*
IT_REPORT_TYPE=surefire
COMPOSE_FILE=
TESTRUNNER_JAVA_VERSION=jdk8_tmp
SNAPSHOT_CODE_RPMS_CONTAINER=im_jboss
COMPOSE_HTTP_TIMEOUT=500
IGNORE_RPMS=
DEFAULT_TEAM=
AUTO_DELIVER=true
CREATE_DELIVERY_GROUP=true
PRE_TEST_SCRIPT=pre_test.sh
POST_TEST_SCRIPT=post_test.sh
DOCKER_COMPOSE_OPTIONS=-f docker-compose.yml
ARQUILLIAN_CUCUMBER_OPTIONS=
IT_REPO=OSS/com.ericsson.oss.mediation.pm.testsuite/pm-mediation-vertical-slice
INTEGRATION_TESTS=
ADDITIONAL_SYSTSEM_PROPERTIES=
TOPIC=
deployPackage=
PYTHON_HOME=/proj/ciexadm200/tools/python-2.7.8
ENM_PY=/proj/ciexadm200/tools/enm_py-2.7.8_reqmnts-2.0
PYTHONPATH=$ENM_PY/usr/lib/python2.7/site-packages:$ENM_PY/usr/lib64/python2.7/site-packages
PATH+EXTRA=/proj/ciexadm200/tools/python-2.7.8/bin:$ENM_PY/usr/bin
ARTIFACTS_WILDCARDS=**/*.log,**/*.ear,**/*.rpm</propertiesContent>
        <secureGroovyScript plugin="script-security@1.78">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger plugin="gerrit-trigger@2.30.5">
          <spec></spec>
          <gerritProjects>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
              <compareType>PLAIN</compareType>
              <pattern>OSS/com.ericsson.oss.mediation.fm.handlers/axe-fm-handler-code</pattern>
              <branches>
                <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
                  <compareType>PLAIN</compareType>
                  <pattern>master</pattern>
                </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              </branches>
              <disableStrictForbiddenFileVerification>false</disableStrictForbiddenFileVerification>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          </gerritProjects>
          <dynamicGerritProjects class="empty-list"/>
          <skipVote>
            <onSuccessful>false</onSuccessful>
            <onFailed>false</onFailed>
            <onUnstable>false</onUnstable>
            <onNotBuilt>false</onNotBuilt>
          </skipVote>
          <silentMode>false</silentMode>
          <notificationLevel></notificationLevel>
          <silentStartMode>false</silentStartMode>
          <escapeQuotes>true</escapeQuotes>
          <nameAndEmailParameterMode>PLAIN</nameAndEmailParameterMode>
          <dependencyJobsNames></dependencyJobsNames>
          <commitMessageParameterMode>BASE64</commitMessageParameterMode>
          <changeSubjectParameterMode>PLAIN</changeSubjectParameterMode>
          <commentTextParameterMode>BASE64</commentTextParameterMode>
          <buildStartMessage></buildStartMessage>
          <buildFailureMessage></buildFailureMessage>
          <buildSuccessfulMessage></buildSuccessfulMessage>
          <buildUnstableMessage></buildUnstableMessage>
          <buildNotBuiltMessage></buildNotBuiltMessage>
          <buildUnsuccessfulFilepath></buildUnsuccessfulFilepath>
          <customUrl></customUrl>
          <serverName>Gerrit_UAT_3.4</serverName>
          <triggerOnEvents>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
              <excludeDrafts>false</excludeDrafts>
              <excludeTrivialRebase>false</excludeTrivialRebase>
              <excludeNoCodeChange>false</excludeNoCodeChange>
              <excludePrivateState>false</excludePrivateState>
              <excludeWipState>false</excludeWipState>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
          </triggerOnEvents>
          <dynamicTriggerConfiguration>false</dynamicTriggerConfiguration>
          <triggerConfigURL></triggerConfigURL>
          <triggerInformationAction/>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>@Library(&apos;ci-pipeline-lib&apos;) _
pipeline {
    agent { label &apos;fem27s11_podc_CIAgent&apos; }
    options {
        timeout(time: 60, unit: &apos;MINUTES&apos;)
        timestamps()
    }
    stages {
        stage(&apos;Pre-step&apos;) {
            steps {
                ci_pcr_pre()
            }
        }
        stage(&apos;Clone&apos;) {
            steps {
                ci_pcr_clone()
                sh &apos;echo &quot;print GERRIT_PATCHSET_REVISION&quot;&apos;
                sh &apos;echo ${GERRIT_PATCHSET_REVISION}&apos;
            }
        }
        stage(&apos;Init&apos;) {
            steps {
                ci_pcr_init()
            }
        }
        stage(&apos;Unit&apos;) {
            steps {
                ci_pcr_unit()
            }
        }
        stage(&apos;Integration&apos;) {
            steps {
                ci_pcr_integration_no_docker()
            }
        }
        stage(&apos;Sonar&apos;) {
            when {
                environment name: &apos;SKIP_SONAR_GLOBAL&apos;, value: &apos;false&apos;
            }
            steps {
                ci_pcr_sonar_analysis()
            }
        }
        stage(&apos;Quality Gate&apos;) {
            when {
                environment name: &apos;SKIP_SONAR_GLOBAL&apos;, value: &apos;false&apos;
            }
            steps {
                ci_pcr_get_qualitygate()
            }
        }
    }
    post {
        always {
            ci_pcr_site()
        }
    }
}

def ci_pcr_site() {
    withMaven(jdk: env.JDK_HOME, maven: env.MVN_HOME, options: [junitPublisher(healthScaleFactor: 1.0)]) {
        sh &quot;mvn site:site&quot;

        if (env.GERRIT_PATCHSET_REVISION) {
          sh &quot;mvn -Psite_review site:stage -DstagingDirectory=${WORKSPACE}/${GERRIT_PATCHSET_REVISION}&quot;
        }
    }

    if (env.GERRIT_PATCHSET_REVISION) {
      sh &apos;&apos;&apos;
      #add comment to gerrit code review
      ssh -p 29418 staging-gerrit.sero.gic.ericsson.se gerrit review ${GERRIT_PATCHSET_REVISION} -m &apos;&quot;Site:&apos;${JOB_URL}&apos; generated for Gerrit Patch Revision &quot;&apos;${GERRIT_PATCHSET_REVISION}
      &apos;&apos;&apos;

      // publish html
      // snippet generator doesn&apos;t include &quot;target:&quot;
      // https://issues.jenkins-ci.org/browse/JENKINS-29711.
      publishHTML (target: [
      allowMissing: false,
      alwaysLinkToLastBuild: false,
      keepAll: true,
      reportDir: &apos;${GERRIT_PATCHSET_REVISION}&apos;,
      reportFiles: &apos;index.html&apos;,
      reportName: &quot;Site Report&quot;
      ])
    }

}
def ci_pcr_clone()
{
       if (env.GERRIT_CHANGE_NUMBER) {
           checkout changelog: true,  \
                    scm: [$class: &apos;GitSCM&apos;,  \
                    branches: [[name: &quot;$GERRIT_REFSPEC&quot;]],  \
                    doGenerateSubmoduleConfigurations: false,  \
                    extensions: [[$class: &apos;BuildChooserSetting&apos;, buildChooser: [$class: &apos;GerritTriggerBuildChooser&apos;]]],  \
                    submoduleCfg: [],  \
                    userRemoteConfigs: [[refspec: &quot;${GERRIT_REFSPEC}&quot;,  \
                    url: &quot;${GERRIT_MIRROR_UAT}/${GERRIT_PROJECT}&quot;]]]
       } else {
           println &quot;No GERRIT_CHANGE_NUMBER&quot;
           git changelog: true, poll: false, url: GERRIT_MIRROR_UAT + &quot;/&quot; + REPO, branch: BRANCH
       }
       if (env.SKIP_SONAR &amp;&amp; env.SKIP_SONAR == &apos;true&apos; &amp;&amp; !env.JOB_NAME.contains(&apos;_Release&apos;)) { 
           manager.addShortText(&quot;QG is off &quot;)
       }
   }
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>